@model CrudAbp.CrudTable.Dto.CrudTableDto
@{
    ViewData["Title"] = "Update Quotes";
}

<h1>Update your Quotes!</h1>

@using (Html.BeginForm("EditQuotes", "CrudView", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Quote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quote, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <input type="hidden" asp-for="Id" />
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="UpdateQuotes" class="btn btn-default" />
            </div>
        </div>
    </div>
    <a href="@Url.Action("ShowQuotes", "CrudView")">View Quotes!</a>
    <div>
        @Html.ActionLink("Test", "ListTest")
    </div>
}